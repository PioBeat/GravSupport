plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.6.5'
    id 'com.palantir.git-version' version "0.12.3"
}

Properties properties = new Properties()
def propertiesFile = project.rootProject.file('local.properties')
if (propertiesFile.exists()) {
    properties.load(propertiesFile.newDataInputStream())
}
def alternativeIdePathTesting = properties.getProperty('alternativeIdePathTesting')

def htmlFixer = { htmlFile -> file(htmlFile).text.replace('<html>', '').replace('</html>', '') }

group 'net.offbeatpioneer.intellij.plugins.grav'
version '0.6.0-alpha'

apply plugin: 'idea'
apply plugin: 'java'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
apply plugin: 'org.jetbrains.intellij'


repositories {
    mavenCentral()
    maven { url "https://www.jetbrains.com/intellij-repository/releases" }
    maven { url "https://jetbrains.bintray.com/intellij-third-party-dependencies" }
    maven { url 'https://dl.bintray.com/jetbrains/intellij-plugin-service' }
}

dependencies {
    implementation group: 'org.eclipse.mylyn.github', name: 'org.eclipse.egit.github.core', version: '2.1.5'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    pluginName 'Grav Support'
    type 'IU'
    version 'IU-2020.2' //ideaVersion
//    localPath = "${localIdePathIU}"
    updateSinceUntilBuild false
    // Absolute path to the locally installed JetBrains, e.g., PhpStorm (for testing)
//    alternativeIdePath "${alternativeIdePathTesting}"
    plugins = [
            "com.jetbrains.php:${phpPluginVersion}",
            "com.jetbrains.twig:${twigPluginVersion}",
            "de.espend.idea.php.annotation:${phpAnnotationPluginVersion}",
            "de.espend.idea.php.toolbox:${toolboxPluginVersion}",
            'coverage',
            'webDeployment',
            'yaml',
            'CSS',
            'java-i18n',
            'properties',
            'xpath',
            'java'
    ]

    // Can't instantiate configurable for PHP Toolbox
    // at de.espend.idea.php.toolbox.ui.application.ToolboxApplicationForm.<init>(ToolboxApplicationForm.java:26)
    tasks {
        buildSearchableOptions {
            enabled = false
        }
        jarSearchableOptions {
            enabled = true
        }
    }
}

runIde {
    jbrVersion '11_0_9b944.49'
    if (project.hasProperty("idePhpStorm")) {
        if (alternativeIdePathTesting != null && alternativeIdePathTesting.trim() != "") {
            println "Using PhpStorm IDE for testing"
            // Absolute path to the locally installed JetBrains, e.g., PhpStorm (for testing)
            ideDirectory "${alternativeIdePathTesting}"
        }
    }
    autoReloadPlugins true
    maxHeapSize "2g"
}

//runPluginVerifier {

//}

patchPluginXml {
    sinceBuild '202'
//    untilBuild '203.*'
    changeNotes = htmlFixer('src/main/resources/META-INF/change-notes.html')
}

wrapper {
    gradleVersion '6.7.1'
}

//task cleanUpGradleLogs() {
//    def gradle = project.getGradle()
//    new File("${gradle.getGradleUserHomeDir().getAbsolutePath()}/daemon/${gradle.getGradleVersion()}").listFiles().each {
//        if (it.getName().endsWith('.out.log')) {
//            logger.debug("Cleaning up daemon log file $it")
//            it.delete()
//        }
//    }
//}
